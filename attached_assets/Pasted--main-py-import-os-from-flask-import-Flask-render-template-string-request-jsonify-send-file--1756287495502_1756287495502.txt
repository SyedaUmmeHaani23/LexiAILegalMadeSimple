# main.py
import os
from flask import Flask, render_template_string, request, jsonify, send_file
from werkzeug.utils import secure_filename
import openai

# Make sure you add your OpenAI API Key in Replit Secrets as OPENAI_API_KEY
openai.api_key = os.environ.get("OPENAI_API_KEY", "")

app = Flask(__name__)
UPLOAD_FOLDER = "uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

# Simple HTML template
HTML_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
  <title>AI Document Analyzer</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; background: #f4f4f9; }
    .container { max-width: 800px; margin: auto; background: white; padding: 20px; border-radius: 12px; box-shadow: 0 4px 10px rgba(0,0,0,0.1); }
    h1 { color: #333; }
    textarea { width: 100%; height: 120px; margin-top: 10px; }
    button { background: #4CAF50; color: white; border: none; padding: 10px 15px; margin: 5px 0; border-radius: 8px; cursor: pointer; }
    button:hover { background: #45a049; }
    .output { margin-top: 20px; white-space: pre-wrap; background: #f1f1f1; padding: 10px; border-radius: 8px; }
  </style>
</head>
<body>
  <div class="container">
    <h1>üìÑ AI Document Analyzer</h1>
    <form id="uploadForm" enctype="multipart/form-data">
      <input type="file" name="file" required>
      <button type="submit">Upload & Analyze</button>
    </form>

    <h3>Or Paste Text:</h3>
    <textarea id="textInput" placeholder="Paste your document text here..."></textarea>
    <button onclick="analyzeText()">Analyze Text</button>

    <div class="output" id="summaryOutput"></div>

    <h3>Ask AI about Document:</h3>
    <input type="text" id="question" placeholder="Type your question here..." style="width:100%">
    <button onclick="askAI()">Ask</button>
    <div class="output" id="qaOutput"></div>

    <button onclick="downloadSummary()">‚¨áÔ∏è Download Summary</button>
  </div>

<script>
  document.getElementById("uploadForm").onsubmit = async function(e) {
    e.preventDefault();
    let formData = new FormData(this);
    let res = await fetch("/upload", { method: "POST", body: formData });
    let data = await res.json();
    document.getElementById("summaryOutput").innerText = data.summary;
  };

  async function analyzeText() {
    let text = document.getElementById("textInput").value;
    let res = await fetch("/analyze", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ text: text })
    });
    let data = await res.json();
    document.getElementById("summaryOutput").innerText = data.summary;
  }

  async function askAI() {
    let question = document.getElementById("question").value;
    let res = await fetch("/ask", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ question: question })
    });
    let data = await res.json();
    document.getElementById("qaOutput").innerText = data.answer;
  }

  function downloadSummary() {
    window.location.href = "/download";
  }
</script>
</body>
</html>
"""

# Store last summary in memory for download
last_summary = ""

@app.route("/")
def index():
    return render_template_string(HTML_TEMPLATE)

@app.route("/upload", methods=["POST"])
def upload_file():
    global last_summary
    if "file" not in request.files:
        return jsonify({"error": "No file uploaded"}), 400
    file = request.files["file"]
    if file.filename == "":
        return jsonify({"error": "No file selected"}), 400
    filepath = os.path.join(UPLOAD_FOLDER, secure_filename(file.filename))
    file.save(filepath)

    with open(filepath, "r", encoding="utf-8", errors="ignore") as f:
        text = f.read()

    summary = summarize_text(text)
    last_summary = summary
    return jsonify({"summary": summary})

@app.route("/analyze", methods=["POST"])
def analyze_text():
    global last_summary
    data = request.get_json()
    text = data.get("text", "")
    summary = summarize_text(text)
    last_summary = summary
    return jsonify({"summary": summary})

@app.route("/ask", methods=["POST"])
def ask_ai():
    data = request.get_json()
    question = data.get("question", "")
    if not last_summary:
        return jsonify({"answer": "Please analyze a document first."})
    prompt = f"Document Summary:\n{last_summary}\n\nUser Question: {question}\nAnswer clearly:"
    response = openai.Completion.create(engine="text-davinci-003", prompt=prompt, max_tokens=200)
    return jsonify({"answer": response.choices[0].text.strip()})

@app.route("/download")
def download_summary():
    if not last_summary:
        return "No summary available", 400
    filepath = os.path.join(UPLOAD_FOLDER, "summary.txt")
    with open(filepath, "w", encoding="utf-8") as f:
        f.write(last_summary)
    return send_file(filepath, as_attachment=True)

def summarize_text(text):
    if not openai.api_key:
        return "‚ùå OpenAI API key not set!"
    prompt = f"Summarize this document in simple bullet points:\n\n{text}"
    response = openai.Completion.create(engine="text-davinci-003", prompt=prompt, max_tokens=200)
    return response.choices[0].text.strip()

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)
